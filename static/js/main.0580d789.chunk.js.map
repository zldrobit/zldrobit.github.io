{"version":3,"sources":["index.js"],"names":["tf","require","names","modelWeight","modelHeight","App","state","model","preview","predictions","onDrop","accepted","rejected","links","_this","setState","cropToCanvas","image","canvas","ctx","naturalWidth","naturalHeight","clearRect","width","height","fillStyle","fillRect","ratio","Math","min","newWidth","round","newHeight","drawImage","onImageChange","e","c","document","getElementById","getContext","target","input","resizeBilinear","browser","fromPixels","div","expandDims","executeAsync","then","res","font","textBaseline","i","_res","Object","_data_home_fjc_workspace_tfjs_yolov5_example_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","boxes","scores","classes","valid_detections","dataSync","_boxes$dataSync$slice","slice","_boxes$dataSync$slice2","x1","y1","x2","y2","klass","score","toFixed","strokeStyle","lineWidth","strokeRect","textWidth","measureText","textHeight","parseInt","_boxes$dataSync$slice3","_boxes$dataSync$slice4","fillText","_this2","this","loadGraphModel","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","react_magic_dropzone__WEBPACK_IMPORTED_MODULE_8___default","accept","multiple","alt","onLoad","src","id","React","Component","rootElement","ReactDOM","render"],"mappings":"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","file":"static/js/main.0580d789.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport MagicDropzone from \"react-magic-dropzone\";\n\nimport \"./styles.css\";\nconst tf = require('@tensorflow/tfjs');\n\nconst weights = '/web_model/model.json';\n\nconst names = ['person', 'bicycle', 'car', 'motorcycle', 'airplane', 'bus', 'train', 'truck', 'boat', 'traffic light',\n               'fire hydrant', 'stop sign', 'parking meter', 'bench', 'bird', 'cat', 'dog', 'horse', 'sheep', 'cow',\n               'elephant', 'bear', 'zebra', 'giraffe', 'backpack', 'umbrella', 'handbag', 'tie', 'suitcase', 'frisbee',\n               'skis', 'snowboard', 'sports ball', 'kite', 'baseball bat', 'baseball glove', 'skateboard', 'surfboard',\n               'tennis racket', 'bottle', 'wine glass', 'cup', 'fork', 'knife', 'spoon', 'bowl', 'banana', 'apple',\n               'sandwich', 'orange', 'broccoli', 'carrot', 'hot dog', 'pizza', 'donut', 'cake', 'chair', 'couch',\n               'potted plant', 'bed', 'dining table', 'toilet', 'tv', 'laptop', 'mouse', 'remote', 'keyboard', 'cell phone',\n               'microwave', 'oven', 'toaster', 'sink', 'refrigerator', 'book', 'clock', 'vase', 'scissors', 'teddy bear',\n               'hair drier', 'toothbrush']\n\nconst [modelWeight, modelHeight] = [320, 320];\n\nclass App extends React.Component {\n  state = {\n    model: null,\n    preview: \"\",\n    predictions: []\n  };\n\n  componentDidMount() {\n    tf.loadGraphModel(weights).then(model => {\n      this.setState({\n        model: model\n      });\n    });\n  }\n\n  onDrop = (accepted, rejected, links) => {\n    this.setState({ preview: accepted[0].preview || links[0] });\n  };\n\n  cropToCanvas = (image, canvas, ctx) => {\n    const naturalWidth = image.naturalWidth;\n    const naturalHeight = image.naturalHeight;\n\n    // canvas.width = image.width;\n    // canvas.height = image.height;\n\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    ctx.fillStyle = \"#000000\";\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    const ratio = Math.min(canvas.width / image.naturalWidth, canvas.height / image.naturalHeight);\n    const newWidth = Math.round(naturalWidth * ratio);\n    const newHeight = Math.round(naturalHeight * ratio);\n    ctx.drawImage(\n      image,\n      0,\n      0,\n      naturalWidth,\n      naturalHeight,\n      (canvas.width - newWidth) / 2,\n      (canvas.height - newHeight) / 2,\n      newWidth,\n      newHeight,\n    );\n\n  };\n\n  onImageChange = e => {\n    const c = document.getElementById(\"canvas\");\n    const ctx = c.getContext(\"2d\");\n    this.cropToCanvas(e.target, c, ctx);\n    const input = tf.image.resizeBilinear(tf.browser.fromPixels(c), [modelWeight, modelHeight])\n      .div(255.0).expandDims(0);\n    this.state.model.executeAsync(input).then(res => {\n      // Font options.\n      const font = \"16px sans-serif\";\n      ctx.font = font;\n      ctx.textBaseline = \"top\";\n\n      const [boxes, scores, classes, valid_detections] = res;\n      var i;\n      for (i = 0; i < valid_detections.dataSync()[0]; ++i){\n        let [x1, y1, x2, y2] = boxes.dataSync().slice(i * 4, (i + 1) * 4);\n        x1 *= c.width;\n        x2 *= c.width;\n        y1 *= c.height;\n        y2 *= c.height;\n        const width = x2 - x1;\n        const height = y2 - y1;\n        const klass = names[classes.dataSync()[i]];\n        const score = scores.dataSync()[i].toFixed(2);\n\n        // Draw the bounding box.\n        ctx.strokeStyle = \"#00FFFF\";\n        ctx.lineWidth = 4;\n        ctx.strokeRect(x1, y1, width, height);\n\n        // Draw the label background.\n        ctx.fillStyle = \"#00FFFF\";\n        const textWidth = ctx.measureText(klass + \":\" + score).width;\n        const textHeight = parseInt(font, 10); // base 10\n        ctx.fillRect(x1, y1, textWidth + 4, textHeight + 4);\n\n      }\n      for (i = 0; i < valid_detections.dataSync()[0]; ++i){\n        let [x1, y1, , ] = boxes.dataSync().slice(i * 4, (i + 1) * 4);\n        x1 *= c.width;\n        y1 *= c.height;\n        const klass = names[classes.dataSync()[i]];\n        const score = scores.dataSync()[i].toFixed(2);\n\n        // Draw the text last to ensure it's on top.\n        ctx.fillStyle = \"#000000\";\n        ctx.fillText(klass + \":\" + score, x1, y1);\n\n      }\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"Dropzone-page\">\n        {this.state.model ? (\n          <MagicDropzone\n            className=\"Dropzone\"\n            accept=\"image/jpeg, image/png, .jpg, .jpeg, .png\"\n            multiple={false}\n            onDrop={this.onDrop}\n          >\n            {this.state.preview ? (\n              <img\n                alt=\"upload preview\"\n                onLoad={this.onImageChange}\n                className=\"Dropzone-img\"\n                src={this.state.preview}\n              />\n            ) : (\n              \"Choose or drop a file.\"\n            )}\n            <canvas id=\"canvas\" width=\"640\" height=\"640\" />\n          </MagicDropzone>\n        ) : (\n          <div className=\"Dropzone\">Loading model...</div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}